# ***************** Universidad de los Andes ***********************
# ****** Departamento de Ingeniería de Sistemas y Computación ******
# ********** Arquitectura y diseño de Software - ISIS2503 **********
#
# Elementos a desplegar:
# 1. Firewalls:
#    - allow-ssh (acceso SSH a VMs)
#    - app-to-db-firewall (Comunicación App -> DB)
#    - external-to-app-firewall (Acceso Web -> App)
# 2. Router y NAT:
#    - cbd-router
#    - cbd-nat
# 3. Instancias MVs:
#    - cbd-db-instance (postgreSQL instalado y configurado)
#    - cbd-app-instance (Aplicación básica instalada)

resources:
  # --- Firewall rules ---

  # Regla para permitir que la App hable con la DB (puerto PostgreSQL)
  - name: app-to-db-firewall
    type: compute.v1.firewall
    properties:
      network: https://www.googleapis.com/compute/v1/projects/galvanized-pipe-458400-p7/global/networks/default
      priority: 1000
      direction: INGRESS
      # Desde VMs con la etiqueta 'app-server'
      sourceTags:
        - app-server
      # Hacia VMs con la etiqueta 'db-server'
      targetTags:
        - db-server
      allowed:
        - IPProtocol: TCP
          ports:
            - 5432 # Puerto estándar de PostgreSQL

  # Regla para permitir acceso externo (web) a la App
  - name: external-to-app-firewall
    type: compute.v1.firewall
    properties:
      network: https://www.googleapis.com/compute/v1/projects/galvanized-pipe-458400-p7/global/networks/default
      priority: 1000
      direction: INGRESS
      # Desde cualquier IP (Internet)
      sourceRanges:
        - 0.0.0.0/0
      # Hacia VMs con la etiqueta 'app-server'
      targetTags:
        - app-server
      allowed:
        - IPProtocol: TCP
          # Puerto donde escucha tu aplicación (ajusta si usas otro)
          ports:
            - 8080

  # --- Router y NAT ---
  # Mantengo los nombres originales por referencia al código fuente
  - name: cbd-router
    type: compute.v1.router
    properties:
      # Elige una región
      region: us-central1
      network: https://www.googleapis.com/compute/v1/projects/galvanized-pipe-458400-p7/global/networks/default
      nats:
        - name: cbd-nat
          natIpAllocateOption: AUTO_ONLY
          sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES

  # --- Database instance ---
  # Mantengo el nombre original de la instancia
  - type: compute.v1.instance
    name: cbd-db-instance
    properties:
      # Elige una zona dentro de la región del router
      zone: us-central1-a
      machineType: https://www.googleapis.com/compute/v1/projects/galvanized-pipe-458400-p7/zones/us-central1-a/machineTypes/e2-micro
      disks:
        - deviceName: boot
          type: PERSISTENT
          boot: true
          autoDelete: true
          initializeParams:
            sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
      networkInterfaces:
        - network: https://www.googleapis.com/compute/v1/projects/galvanized-pipe-458400-p7/global/networks/default
          networkIP: 10.128.0.52
      tags:
        items:
          - db-server # Etiqueta simplificada
      metadata: # Script para instalar y configurar PostgreSQL
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              sudo apt-get update
              sudo apt-get install -y postgresql postgresql-contrib
              sudo -u postgres psql -c "CREATE USER afgomezg1 WITH PASSWORD 'password';"
              sudo -u postgres createdb -O afgomezg1 bdproyecto
              echo "host all all 0.0.0.0/0 trust" | sudo tee -a /etc/postgresql/12/main/pg_hba.conf
              echo "listen_addresses='*'" | sudo tee -a /etc/postgresql/12/main/postgresql.conf
              echo "max_connections=2000" | sudo tee -a /etc/postgresql/12/main/postgresql.conf
              sudo service postgresql restart

  # --- Application instance ---
  # Renombramos para claridad, pero mantenemos la estructura de las instancias de app originales
  - type: compute.v1.instance
    name: cbd-app-instance # Nombre simplificado
    properties:
      # Misma zona que la DB
      zone: us-central1-a
      machineType: https://www.googleapis.com/compute/v1/projects/galvanized-pipe-458400-p7/zones/us-central1-a/machineTypes/e2-micro
      disks:
        - deviceName: boot
          type: PERSISTENT
          boot: true
          autoDelete: true
          initializeParams:
            sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
      networkInterfaces:
        - network: https://www.googleapis.com/compute/v1/projects/galvanized-pipe-458400-p7/global/networks/default
          networkIP: 10.128.0.53
          accessConfigs: # Esto le da una IP externa
            - name: External NAT
              type: ONE_TO_ONE_NAT
      tags:
        items:
          - app-server # Etiqueta simplificada
      metadata: # Script para obtener la aplicación e instalar dependencias
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              sudo apt-get update
              sudo apt install python3-pip -y
              sudo mkdir /labs
              cd /labs
              sudo git clone https://github.com/giulianavolpi/ANG_DiagnosticAPP
              cd ANG_DiagnosticAPP
              sudo git checkout nicolas23
              sudo pip3 install -r requirements.txt
              sudo python3 manage.py makemigrations
              sudo python3 manage.py migrate
